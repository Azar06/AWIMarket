{
    "swagger": "2.0",
    "info": {
        "description": "Describe how to use AWIMarket REST API\n",
        "version": "1.0.0",
        "title": "AWIMARKET REST API",
        "contact": {
            "name": "mehdi.chamouma@gmail.com, nassimvachor@gmail.com, arnaud.zaragoza@gmail.com"
        }
    },
    "securityDefinitions": {
        "basicAuth": {
            "type": "basic",
            "description": "HTTP Basic Authentication. Works over `HTTP` and `HTTPS`"
        }
    },
    "paths": {
        "/auth/token": {
            "get": {
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "summary": "Authentication",
                "description": "This endpoint serve the API Token",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "token": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/": {
            "get": {
                "tags": [
                    "user"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get all users",
                "description": "Fetch all AWIMarket users. \n",
                "responses": {
                    "200": {
                        "description": "The list of all users",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserPreview"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Create a new user",
                "description": "Create a new user in the database\n",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserBase"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Return the new user",
                        "schema": {
                            "$ref": "#/definitions/UserPreview"
                        }
                    }
                }
            }
        },
        "/users/{user_id}": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Fetch a user",
                "description": "Fetch a user with its journals.\nIf the user has a company. Return also the company\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_id",
                        "description": "The user id that needs to be fetched.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return the user",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "user"
                ],
                "summary": "Updated user",
                "description": "Update the user informations. \nThis can only be done by the logged in user or an admin\n",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_id",
                        "description": "user_id that need to be updated",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Updated user object",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UserBase"
                        }
                    }
                ],
                "responses": {
                    "203": {
                        "description": "User updated",
                        "schema": {
                            "$ref": "#/definitions/UserPreview"
                        }
                    },
                    "400": {
                        "description": "Invalid user informations supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "user"
                ],
                "summary": "Delete user",
                "description": "This can only be done by an admin.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_id",
                        "description": "The user id that needs to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User deleted"
                    },
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/journals/{journal_id}": {
            "get": {
                "tags": [
                    "journal"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get the journal",
                "description": "Return also the entries and the comments\n",
                "parameters": [
                    {
                        "in": "path",
                        "name": "journal_id",
                        "type": "string",
                        "format": "string",
                        "required": true,
                        "description": "journal id to fetch"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The journal fetched",
                        "schema": {
                            "$ref": "#/definitions/Journal"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "journal"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update journal informations",
                "description": "This can only be done by the user owner\n",
                "parameters": [
                    {
                        "in": "path",
                        "name": "journal_id",
                        "type": "string",
                        "format": "string",
                        "required": true,
                        "description": "journal id to update"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JournalBase"
                        }
                    }
                ],
                "responses": {
                    "203": {
                        "description": "Journal has been updated",
                        "schema": {
                            "$ref": "#/definitions/JournalPreview"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "journal"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a journal",
                "parameters": [
                    {
                        "in": "path",
                        "name": "journal_id",
                        "type": "string",
                        "format": "string",
                        "required": true,
                        "description": "journal id to be deleted"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Journal has been deleted"
                    }
                }
            }
        },
        "/journals": {
            "get": {
                "tags": [
                    "journal"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Get the user journals",
                "responses": {
                    "200": {
                        "description": "The journal list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/JournalPreview"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "journal"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Create a journal",
                "responses": {
                    "201": {
                        "description": "Journal created"
                    }
                }
            }
        },
        "/journals/{journal_id}/entries": {
            "post": {
                "tags": [
                    "journal"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Create a journal entry",
                "parameters": [
                    {
                        "in": "path",
                        "name": "journal_id",
                        "type": "string",
                        "format": "string",
                        "required": true,
                        "description": "journal id to add the entry"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JournalEntry"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Entry created",
                        "schema": {
                            "$ref": "#/definitions/JournalEntry"
                        }
                    }
                }
            }
        },
        "/journals/{journal_id}/entries/{entry_id}": {
            "delete": {
                "tags": [
                    "journal"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Create a journal entry",
                "parameters": [
                    {
                        "in": "path",
                        "name": "journal_id",
                        "type": "string",
                        "format": "string",
                        "required": true,
                        "description": "id of the concerned journal"
                    },
                    {
                        "in": "path",
                        "name": "entry_id",
                        "type": "string",
                        "format": "string",
                        "required": true,
                        "description": "Id of the entry to delete"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Journal created"
                    }
                }
            }
        },
        "/journals/{journal_id}/comments": {
            "post": {
                "tags": [
                    "journal"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Create a journal comment",
                "parameters": [
                    {
                        "in": "path",
                        "name": "journal_id",
                        "type": "string",
                        "format": "string",
                        "required": true,
                        "description": "journal id to add the comment"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JournalComment"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Comment created",
                        "schema": {
                            "$ref": "#/definitions/JournalComment"
                        }
                    }
                }
            }
        },
        "/journals/{journal_id}/comments/{comment_id}": {
            "delete": {
                "tags": [
                    "journal"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Delete a journal comment",
                "parameters": [
                    {
                        "in": "path",
                        "name": "journal_id",
                        "type": "string",
                        "format": "string",
                        "required": true,
                        "description": "id of the concerned journal"
                    },
                    {
                        "in": "path",
                        "name": "comment_id",
                        "type": "string",
                        "format": "string",
                        "required": true,
                        "description": "Id of the comment to delete"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Comment deleted"
                    }
                }
            }
        },
        "/products": {
            "get": {
                "tags": [
                    "product"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "keyword",
                        "type": "string",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "list of products",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProductPreview"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "product"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "create a new product",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProductBase"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product created",
                        "schema": {
                            "$ref": "#/definitions/ProductPreview"
                        }
                    }
                }
            }
        },
        "/products/{product_id}": {
            "put": {
                "tags": [
                    "product"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "product_id",
                        "type": "string",
                        "format": "string",
                        "required": true,
                        "description": "id of the product to update"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProductBase"
                        }
                    }
                ],
                "summary": "update a product",
                "description": "update a product",
                "responses": {
                    "200": {
                        "description": "Product updated",
                        "schema": {
                            "$ref": "#/definitions/ProductBase"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "product"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "product_id",
                        "type": "string",
                        "format": "string",
                        "required": true,
                        "description": "id of the product to delete"
                    }
                ],
                "summary": "Delete a product",
                "description": "Delete a product",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/companies": {
            "get": {
                "tags": [
                    "company"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Fetch the companies",
                "responses": {
                    "200": {
                        "description": "list of the companies",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CompanyPreview"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "company"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Create a company",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CompanyBase"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Company has been created",
                        "schema": {
                            "$ref": "#/definitions/CompanyPreview"
                        }
                    },
                    "403": {
                        "description": "Can't create a new company. Maximum number of companies per user is one"
                    }
                }
            }
        },
        "/companies/{company_id}": {
            "get": {
                "tags": [
                    "company"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Fetch the company",
                "parameters": [
                    {
                        "in": "path",
                        "name": "company_id",
                        "type": "string",
                        "format": "string",
                        "required": true,
                        "description": "id of the concerned journal"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Company informations",
                        "schema": {
                            "$ref": "#/definitions/Company"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "company"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "Update the company",
                "parameters": [
                    {
                        "in": "path",
                        "name": "company_id",
                        "type": "string",
                        "format": "string",
                        "required": true,
                        "description": "id of the concerned journal"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CompanyBase"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Company informations",
                        "schema": {
                            "$ref": "#/definitions/Company"
                        }
                    }
                }
            }
        },
        "/companies/{company_id}/orders": {
            "get": {
                "tags": [
                    "company",
                    "order"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "company_id",
                        "type": "string",
                        "format": "string",
                        "required": true,
                        "description": "The company identifier of the orders"
                    }
                ],
                "summary": "Get a company orders",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OrderPreview"
                            }
                        }
                    }
                }
            }
        },
        "/orders": {
            "get": {
                "tags": [
                    "order"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get orders",
                "description": "Get all orders\n",
                "parameters": [
                    {
                        "in": "query",
                        "name": "type",
                        "type": "string",
                        "format": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OrderPreview"
                            }
                        }
                    }
                }
            }
        },
        "/orders/{order_id}": {
            "get": {
                "tags": [
                    "order"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "order_id",
                        "type": "string",
                        "format": "string",
                        "required": true
                    }
                ],
                "summary": "Get an order summary",
                "description": "Get an order summary",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "order"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "order_id",
                        "type": "string",
                        "format": "string",
                        "required": true
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/OrderBase"
                        }
                    }
                ],
                "summary": "Update an order",
                "description": "Update an order",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderPreview"
                        }
                    }
                }
            }
        },
        "/orders/{order_id}/products/{product_id}": {
            "put": {
                "tags": [
                    "order",
                    "product"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "order_id",
                        "type": "string",
                        "format": "string",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "product_id",
                        "type": "string",
                        "format": "string",
                        "required": true
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "description": "abc",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "description": "the new status",
                                    "type": "string",
                                    "format": "string"
                                }
                            }
                        }
                    }
                ],
                "summary": "Update an order product",
                "description": "Used to change the product selling status",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/orders/{order_id}/payment": {
            "post": {
                "tags": [
                    "order"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Pay the order",
                "description": "Pay the order",
                "parameters": [
                    {
                        "in": "path",
                        "name": "order_id",
                        "type": "string",
                        "format": "string",
                        "required": true
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OrderPayment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "403": {
                        "description": "User is not the owner of the ressource or the order is already paied"
                    }
                }
            }
        },
        "/notifications": {
            "get": {
                "tags": [
                    "notification"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get the user notifications",
                "description": "User and eventually Company and Admin notifications\n",
                "responses": {
                    "200": {
                        "description": "List of notifications",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Notification"
                            }
                        }
                    }
                }
            }
        },
        "/notifications/{notification_id}": {
            "patch": {
                "tags": [
                    "notification"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "notification_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "summary": "Mark the notification as read",
                "responses": {
                    "200": {
                        "description": "The updated notification",
                        "schema": {
                            "$ref": "#/definitions/Notification"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "UserBase": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "birthday": {
                    "type": "string",
                    "format": "date"
                },
                "address": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "id_admin": {
                    "type": "boolean"
                }
            }
        },
        "UserPreview": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/UserBase"
                },
                "nb_commands": {
                    "type": "integer",
                    "format": "int64"
                },
                "nb_journals": {
                    "type": "integer",
                    "format": "integer"
                },
                "company": {
                    "$ref": "#/definitions/CompanyPreview"
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/UserBase"
                },
                "nb_commands": {
                    "type": "integer",
                    "format": "int64"
                },
                "nb_journals": {
                    "type": "integer",
                    "format": "integer"
                },
                "journals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/JournalPreview"
                    }
                },
                "company": {
                    "$ref": "#/definitions/CompanyPreview"
                }
            }
        },
        "JournalBase": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "title": {
                    "type": "string",
                    "format": "string"
                },
                "creationDate": {
                    "type": "string",
                    "format": "date"
                }
            }
        },
        "JournalPreview": {
            "type": "object",
            "properties": {
                "journal": {
                    "$ref": "#/definitions/JournalBase"
                },
                "nb_entries": {
                    "type": "integer"
                },
                "nb_comments": {
                    "type": "integer"
                }
            }
        },
        "Journal": {
            "type": "object",
            "properties": {
                "journal": {
                    "$ref": "#/definitions/JournalBase"
                },
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/JournalEntry"
                    }
                },
                "comments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/JournalComment"
                    }
                },
                "owner": {
                    "$ref": "#/definitions/UserPreview"
                }
            }
        },
        "JournalEntry": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "string"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "creationDate": {
                    "type": "string",
                    "format": "dates"
                },
                "author": {
                    "$ref": "#/definitions/UserPreview"
                }
            }
        },
        "JournalComment": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "string"
                },
                "description": {
                    "type": "string"
                },
                "creationDate": {
                    "type": "string",
                    "format": "date"
                },
                "author": {
                    "$ref": "#/definitions/UserPreview"
                }
            }
        },
        "ProductBase": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "price": {
                    "type": "number",
                    "format": "Float"
                },
                "quantity": {
                    "type": "integer"
                },
                "creationDate": {
                    "type": "string",
                    "format": "date"
                },
                "seller": {
                    "$ref": "#/definitions/CompanyPreview"
                }
            }
        },
        "ProductPreview": {
            "type": "object",
            "properties": {
                "product": {
                    "$ref": "#/definitions/ProductBase"
                }
            }
        },
        "CompanyBase": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "string"
                },
                "name": {
                    "type": "string"
                },
                "siret": {
                    "type": "string"
                }
            }
        },
        "CompanyPreview": {
            "type": "object",
            "properties": {
                "company": {
                    "$ref": "#/definitions/CompanyBase"
                },
                "owner": {
                    "$ref": "#/definitions/UserPreview"
                }
            }
        },
        "Company": {
            "type": "object",
            "properties": {
                "company": {
                    "$ref": "#/definitions/CompanyBase"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProductPreview"
                    }
                },
                "owner": {
                    "$ref": "#/definitions/UserPreview"
                }
            }
        },
        "Order": {
            "type": "object",
            "properties": {
                "order": {
                    "$ref": "#/definitions/OrderBase"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "product": {
                                "$ref": "#/definitions/ProductBase"
                            },
                            "quantity": {
                                "type": "integer",
                                "format": "Int64"
                            },
                            "price": {
                                "type": "integer",
                                "format": "Int64"
                            },
                            "status": {
                                "type": "string"
                            }
                        }
                    }
                },
                "owner": {
                    "$ref": "#/definitions/UserPreview"
                }
            }
        },
        "OrderBase": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "string"
                },
                "validationDate": {
                    "type": "string",
                    "format": "date"
                },
                "creationDate": {
                    "type": "string",
                    "format": "date"
                },
                "refusalDate": {
                    "type": "string",
                    "format": "date"
                },
                "paymentDate": {
                    "type": "string",
                    "format": "date"
                }
            }
        },
        "OrderPreview": {
            "type": "object",
            "properties": {
                "order": {
                    "$ref": "#/definitions/OrderBase"
                }
            }
        },
        "OrderPayment": {
            "type": "object",
            "properties": {
                "creditCardNumber": {
                    "type": "string"
                },
                "month": {
                    "type": "string"
                },
                "day": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                }
            }
        },
        "Notification": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "creationDate": {
                    "type": "string",
                    "format": "date"
                },
                "readingDate": {
                    "type": "string",
                    "format": "date"
                }
            }
        }
    },
    "host": "virtserver.swaggerhub.com",
    "basePath": "/mehdichamouma/awimarket/1.0.0",
    "schemes": [
        "https"
    ]
}
